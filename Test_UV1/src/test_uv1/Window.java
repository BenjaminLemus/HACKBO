/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test_uv1;

import com.panamahitek.ArduinoException;
import com.panamahitek.PanamaHitek_Arduino;
import java.io.FileOutputStream;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import jssc.SerialPortException;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;

/**
 *
 * @author Marvin Rivas Zurita
 */
public class Window extends javax.swing.JFrame {
    PanamaHitek_Arduino Arduino=new PanamaHitek_Arduino();
    Calendar Calendario=Calendar.getInstance();
    int Slot=1;
    float Voltaje=0;
    float Irradiancia=0;
    //float Flotante=0;
    int Lecturas=0;
    boolean State=false;
    
    float promV=0;
    float promI=0;
    
    
    SerialPortEventListener evento=new SerialPortEventListener() {
        @Override
        public void serialEvent(SerialPortEvent spe) {
            try {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                if(Arduino.isMessageAvailable())
                {
                    //System.out.println(Arduino.printMessage());
                    //Flotante=Float.parseFloat(Arduino.printMessage());
                    //System.out.println(Flotante);
                   if(Slot==1)
                   {
                       if(Lecturas>1)
                    {
                        TableUpdate();
                    }   
                       
                       Slot=2;
                       Lecturas++;
                       Voltaje=Float.parseFloat(Arduino.printMessage());
                       /*int i=0;
                    
                           if(i==6)
                           {
                               promV=promV+Voltaje;
                               i++;
                           }
                           
                           else
                           {
                               promV=promV/5;
                               i=0;
                               promV=0;
                           }*/
                    
                   }
                   else if(Slot==2)
                   {
                       Slot=1;
                       Lecturas++;
                       Irradiancia=Float.parseFloat(Arduino.printMessage());
                
                   }
                }
            } catch (SerialPortException ex) {
                Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ArduinoException ex) {
                Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    };

   DefaultTableModel Modelo;
   
   public void TableUpdate()
   {
       //System.out.println("Voltaje:" +Voltaje+ " Irradiancia:" +Irradiancia);
       String Output="";
       String hora=Calendario.get(Calendar.HOUR_OF_DAY)+"";
       String minuto=Calendario.get(Calendar.MINUTE)+"";
       String segundos=Calendario.get(Calendar.SECOND)+"";
       
       if(Integer.parseInt(hora)<10)
       {
           hora="0"+hora;
       }
       
        if(Integer.parseInt(minuto)<10)
       {
           minuto="0"+minuto;
       }
        
       if(Integer.parseInt(segundos)<10)
       {
           segundos="0"+segundos;
       } 
       
       Output=hora+":"+minuto+":"+segundos;
       Calendario= Calendar.getInstance();
       
      
       Modelo.addRow(new Object[] {""+Output,Voltaje,Irradiancia,promV,promI});
   }
   
    public Window(){
        initComponents();
        Modelo=(DefaultTableModel) jTable1.getModel();
        
        try {
            Arduino.arduinoRXTX("COM4", 9600, evento);
        } catch (ArduinoException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hora", "Voltaje", "Irradiancia"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("ON/OFF");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("EXCEL");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(438, 438, 438)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        /*try {
            Arduino.sendData("1");
       X } catch (ArduinoException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SerialPortException ex) {
            Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        
        if(State==true)
        {
            jButton1.setText("ON");
            State=false;
            try
            {
                Arduino.sendData("0");
                
            }
            catch(Exception ex)
            {
                Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            State=true;
            jButton1.setText("OFF");
            
            try
            {
               Arduino.sendData("1");  
            }
            catch(Exception ex)
            {
                Logger.getLogger(Window.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    
    public void FicheroExcel(String input)
    {
        HSSFWorkbook libro=new HSSFWorkbook();
        HSSFSheet hoja=libro.createSheet();
        HSSFRow fila=hoja.createRow(0);
        HSSFCell celda=fila.createCell(0);
        celda.setCellValue("Datos Obtenidos del sensor:");
        fila=hoja.createRow(1);
        celda=fila.createCell(0);
        celda.setCellValue("Hora:");
        celda=fila.createCell(1);
        celda.setCellValue("Voltaje");
        celda=fila.createCell(2);
        celda.setCellValue("Irradiancia");
        
        for(int i=0;i<=Modelo.getRowCount()-1;i++)
        {
            fila=hoja.createRow(i+2);
            
            for(int j=0;j<=2;j++)
            {
                celda=fila.createCell(j);
                celda.setCellValue(jTable1.getValueAt(i, j).toString());
            }
        }
        try{
            FileOutputStream Fichero=new FileOutputStream(input);
            libro.write(Fichero);
            Fichero.close();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        //Modelo.removeRow(0);
        javax.swing.JFileChooser Ventana= new javax.swing.JFileChooser();
        String ruta="";
        try
           {
               if(Ventana.showSaveDialog(null)== Ventana.APPROVE_OPTION);
               {
                   ruta=Ventana.getSelectedFile().getAbsolutePath()+".xls";
                   FicheroExcel(ruta);
               }
                    
           }
        catch(Exception ex)
                {
                   ex.printStackTrace();
                }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
